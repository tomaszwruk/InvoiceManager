<!--oczekujemy konkretnego modelu danych, w View Model robimy jak najmniej kodu-->
@model InvoiceManager.Models.ViewModels.EditInvoiceViewModel
@{
    ViewBag.Title = Model.Heading;
}

<h1 class="mb-3">@Model.Heading</h1>

@if (Model.Invoice.Id != 0)
{
    <button class="btn btn-primary mb-3"
            onclick='window.location.href="@Url.Action("InvoicePosition", "Home",
                    new { invoiceId = Model.Invoice.Id })"'>
        Dodaj pozycję
    </button>
    <button class="btn btn-secondary mb-3" onclick="generujPdf">Generuj PDF</button>
}

<div class="row">
    <div class="col-lg-6">
        <!--Połowa ekranu, a poniżej obiekt na pozostałej połowie-->
        <!--Formularz z przyciskiem submit-->
        @using (Html.BeginForm("Invoice", "Home"))
        {
            if (Model.Invoice.Id == 0)
            {
                <p class="alert alert-info mt-4 mb-4">
                    Pola tytuł, klient, sposób płatności i termin są <strong>wymagane</strong>
                </p>
            }
            <!--przekazujemy także pola dodatkowe do kontrolera aby wiedziec do jakiej FV dopisać-->
            @Html.HiddenFor(x => x.Invoice.Id)
            //@Html.HiddenFor(x => x.Invoice.UserId)
            <!--lepiej userId nie przechopwywać w kodzie html bo może to zostać łatwo podmienione w kodzie, xmienna potem jest przekazywana do kontrolera-->
        //@Html.HiddenFor(x => x.Invoice.CreatedDate)


        <div class="form-group">
            @Html.LabelFor(x => x.Invoice.Title)
            @Html.TextBoxFor(x => x.Invoice.Title,
                  new { @class = "form-control", autofocus = "autofocus" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Invoice.ClientId)
            @Html.DropDownListFor(x => x.Invoice.ClientId,
                  new SelectList(Model.Clients, "Id", "Name"), "-- Wybierz klienta --",
                  new { @class = "form-control" })
        </div>

        <!--Wartość wyświetlaj tylko gdy edycja-->
            if (Model.Invoice.Id != 0)
            {
                <div class="form-group">
                    @Html.LabelFor(x => x.Invoice.Value)
                    @Html.TextBoxFor(x => x.Invoice.Value,
                            new { @class = "form-control", @readonly = "readonly" })

                </div>
            }
            <div class="form-group">
                @Html.LabelFor(x => x.Invoice.MethodOfPaymentId)
                @Html.DropDownListFor(x => x.Invoice.MethodOfPaymentId,
                      new SelectList(Model.MethodOfPayment, "Id", "Name"), "-- Wybierz metodę płatności --",
                      new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Invoice.PaymentDate)
                @Html.TextBoxFor(x => x.Invoice.PaymentDate, "{0:dd-MM-yyyy}",
                      new
                           {
                               @class = "form-control",
                            @id = "PaymentDate",
                            autocomplate = "off"
                           })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Invoice.Comments)
                @Html.TextAreaFor(x => x.Invoice.Comments,
                      new { @class = "form-control" })
            </div>

            <button class="btn btn-primary btn-lg mb-5" type="submit">
                Zapisz
            </button>



        }
    </div>

    <div class="col-5 offset-lg-1">
        @if (Model.Invoice.Id != 0)
        {
            @Html.Partial("_InvoicePosition", Model.Invoice.InvoicePositions)
        }
    </div>
</div>

<!--section zostanie wstawiona do _Layout.cshtml w RenderSection-->
<!--(dokument).ready( wykrywa załadowanie strony i wykonuje funcję-->

@section Scripts
{
    <script type="text/javascript">
        function generujPdf() {

        };

        function deleteInvoicePosition(id, invoiceId, btn) {
            if (!confirm("Cz na pewno chcesz usunąć pozycję?"))
                return;
            $.ajax({
                //usuwanie z bazy a poniżej z kodu html
                type: 'POST',
                url: "@Url.Action("DeletePosition", "Home")",
                data: {
                    id: id,
                    invoiceId: invoiceId
                },
                success: function (data) {
                    if (data.Success) {
                        //usuwanie
                        var row = btn.parentNode.parentNode; //2 x parNode ponieważ 1 w tabeli to td potem tr czyli cały node
                        row.parentNode.removeChild(row); //znów poziom wyżej i ten rodzic usuwa swoje diecko czyli cały wiersz w html

                        //przelicz wartość faktury
                        var invoiceVal = data.invoiceValue; //DeletePosition zwraca suuccess i invoiceValue
                        $('#Invoice_Value').val(invoiceVal.toFixed(2).replace(".", ",")); //odnośmimy się do textboxa z wartością fv, _ zastepujr kropke

                    } else {
                        alert(data.Meesage);
                    }

                },
                error: function (data) {
                    if (data.Success) {

                    } else {
                        alert(data.Meesage);
                    }
                },
                dataType: 'json',
            });
        };

        $(document).ready(function () {
            $('#PaymentDate').datepicker({
                format: "dd-mm-yyyy",
                language: "pl",
                multidate: false,
                autoclose: true,
                todayHighLight: true,
                forceParse: false
            });

        });
    </script>
}
